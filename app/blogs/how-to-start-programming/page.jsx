import BlogDetail from "@/components/BlogDetail";
import React from "react";
import StartProgramming from "@/public/assets/Blog/firstImageHowStartProgrtamming.jpg";
import secondImageHowStartProgrtamming from "@/public/assets/Blog/secondImageHowStartProgrtamming.jpg";
import thirdImageHowStartProgrtamming from "@/public/assets/Blog/thirdImageHowStartProgrtamming.jpg";

function page() {
  return (
    <>
      <BlogDetail
      firstImageAlt={"برنامه نویسی وب را از کجا شروع کنیم؟"}
        firstImageSrc={StartProgramming}
        secondImage={secondImageHowStartProgrtamming}
        thirdImage={thirdImageHowStartProgrtamming}
        title={"برنامه نویسی وب را از کجا شروع کنیم؟"}
        firstBody={
          "لایه‌ی ظاهری: این لایه شامل تمام قسمت‌هایی از یک وب‌سایت یا یک وب اپلکیشن می‌شود که کاربران اینترنتی می‌توانند این قسمت‌ها را مشاهده کنند؛ مانند: منوها، باکس‌های مختلف، متن‌ها، رنگ‌ها، تم سایت و… . لازم به ذکر است که لایه‌ی ظاهری در اصطلاحِ فنی توسط برنامه نویسانِ فرانت اِند (Front-End developers) ساخته و پرداخته می‌شود. لایه‌ی زیرین: این لایه نیز شامل تمام عملکردهای یک وب‌سایت یا وب اپلیکیشن است که کاربران قادر به مشاهده آن‌ها نیستند؛ مثلاً وقتی کاربری پس از پر کردن فرم ثبت‌نام در یک سایت، روی دکمه Sign Up کلیک می‌کند، یک سری پیام‌ها و اطلاعات از مرورگر کاربر به سمت سرورِ سایت فرستاده می‌شوند و در آنجا اعتبارسنجی و پردازش می‌شوند یا در صورت لزوم در دیتا بیسِ سایت ذخیره می‌گردند. به‌طور کلی تمام عملکرد فنی،‌ محاسباتی و ذخیره‌سازیِ سایت در لایه‌ی زیرین اتفاق می‌افتد. لازم به ذکر است که ساخت لایه‌ی زیرین در اصطلاحِ فنی توسط برنامه نویسانِ بک اند (Back-End developers) صورت می‌گیرد."
        }
        secondTitle={"برنامه نویسی وب فرانت اند Front-End چیست؟"}
        secondBody={
          "برنامه نویسی فرانت‌اند – که به توسعه از سمت کلاینت (مشتری) نیز شناخته می‌شود – شامل تمام کدهایی است که به‌صورت گرافیکی برای کاربران وب‌سایت نمایش داده می‌شود؛ یعنی همان لایه‌ی ظاهری که در ابتدا گفتیم.یکی از مهم‌ترین اهداف به‌منظور ساخت و راه‌اندازی یک وب‌سایت یا یک وب اپلیکیشن این است که کاربران اطلاعات را در یک قالبِ گرافیکیِ مناسب به‌راحتی ببینند و از این اطلاعات استفاده کنند، اما امروزه دستیابی به این هدف سخت‌تر است؛ زیرا کاربران با دستگاه‌های مختلف، مرورگرهای مختلف و سیستم‌عامل‌های مختلفی از یک وب‌سایت یا یک وب اپلیکیشن بازدید می‌کنند. یک برنامه نویس وب فرانت‌اند باید به نحوی یک وب‌سایت یا یک وب اپلیکیشن را آماده کند که در تمامی دستگاه‌ها (Cross-Device)، تمامی مرورگرها (Cross-Browser) و تمامی سیستم‌عامل‌ها (Cross-Platform) به‌درستی نمایش داده شود و ظاهر نامناسبی نداشته باشد."
        }
        thirdTitle={"مسیر یادگیری برنامه نویسی وب در شاخه فرانت اند Front-End"}
        thirdBody={
          "آشنایی با اینترنت: مواردی شامل نحوه‌ی کار اینترنت، نحوه ثبت یک دامنه (Domain) و اتصال آن به هاست، چگونگی کارکرد DNS ها، طرز کار مرورگرها، شناخت پروتکل‌های شبکه نظیر HTTP.   یادگیری زبان‌های نشانه‌گذاری و برنامه نویسی فرانت‌اند: در ادامه‌ی مقاله زبان‌های برنامه نویسی وب فرانت‌اند، معرفی خواهند شد.    یادگیری سیستم‌های کنترل نسخه (Version Control Systems): سیستم‌های کنترل نسخه‌ی رایگان و منبع‌باز نظیر GitHub به شما امکان مدیریت همه‌چیز را در پروژه‌های کوچک و بزرگ می‌دهند.   کسب دانش امنیت وب: امنیت وب شامل اقداماتی است که توسعه‌دهندگان برای محافظت از برنامه‌ها و کدهای کاربردی و حیاتی وب، در برابر تهدیدات دنیای مجازی، اعمال می‌کنند."
        }
        forthTitle={
          "زبان ها و فریمورک های مورد نیاز برای یادگیری فرانت اند Front-End"
        }
        fifthTitle={"زبان نشانه گذاری HTML"}
        forthBody={
          "عبارت HTML کوتاه‌شده‌ی Hyper Text Markup Language است. لطفاً توجه داشته باشید که HTML یک زبان برنامه نویسی نیست؛ بلکه یک زبان نشانه‌گذاری است! به کمک زبان نشانه‌گذاریِ HTML شما پایه و ساختار اصلی ظاهر صفحه‌ی وبِ خود را آماده می‌کنید؛ به بیان دیگر، شما ساختار کلی ظاهر وب‌سایت خود، قسمت‌های مختلف قرارگیری محتوا و نوع نمایش محتوا را آماده می‌کنید، تا بعد به کمک CSS به آن طرح‌های گرافیکی خاصی را اعمال کنید و به کمک JavaScript صفحه اینترنتی خود را پویا سازید.  برای درک هرچه بهتر این موضوع بگذارید یک مثال می‌زنیم. فرض کنید یک صفحه اینترنتی (Web Page) مانند یک بنای ساختمانی است. شما برای ساختن یک بنای ساختمانی، ابتدا باید فوندانسیون و اسکلت‌بندی آن را انجام دهید، سپس بر روی آن اسکلت‌بندی، عناصر بصری را مانند دیوارها، نمای ساختمانی و… را اعمال کنید تا شکل یک بنا را به خود بگیرید. یک صفحه‌ی اینترنتی (Web Page) نیز دقیقاً همین‌طور است؛ شما ابتدا باید با HTML ساختار و اسکلت‌بندی صفحه‌ی خود را انجام دهید و با کمک CSS به آن ساختار، ظاهر دلخواه خود را اعمال کنید."
        }
        sixthTitle={"زبان CSS"}
        fifthBody={
          "از این زبان برای طراحی ظاهر سایت مانند: رنگ‌بندی‌ها، تم‌ها، فونت‌ها و طرح‌بندی‌های یک صفحه‌ی وب و… استفاده می‌شود. کدی که به کمک این زبان می‌زنید، بر روی HTML نشسته و کمک می‌کند تا صفحه‌ی وب شما بر روی دستگاه‌هایی با سایز صفحه‌ی متفاوت، به‌درستی نمایش داده شود (Cross-Device).  شایان ذکر است، پس از اینکه زبان CSS را به‌طور کامل یاد گرفتید، برای هرچه راحت‌تر کد زدن در شاخه فرانت‌اند، بهتر است فریمورک‌هایی نظیر: Bootstrap، Materialize، Tailwind و… را نیز یاد بگیرید."
        }
        seventhTitle={
          "زبان برنامه نویسی جاوا اسکریپت JavaScript و فریمورک های آن"
        }
        sixthBody={
          "برای ایجاد تعامل در صفحه‌ی وب خود، نیاز دارید تا از زبان برنامه نویسیِ Java-Script بهره ببرید. این زبان شما کمک می‌کند تا ظاهری که به کمک HTML و CSS ساخته‌اید، با کاربر تعامل داشته باشد؛ تعامل داشتن یعنی چه؟ تعاملی بودن یک صفحه‌ی وب یعنی مثلاً وقتی کاربر روی یک دکمه کلیک کند، اِلِمان‌های خاصی از صفحه جابه‌جا شوند یا رنگ تمِ قالب تغییر کند؛ یا مانند بسیاری از سایت‌ها که دیده‌ایم، منو و بنر به‌صورت اسلاید تغییر کند و یا کاربر آن‌ها را تغییر دهد (مانند تبلیغات بالای صفحه‌ی فرادرس، دیجی‌کالا و… که به‌صورت مداوم در حال تغییر هستند).       پس از اینکه، زبان جاوا اسکریپت را به‌طور کامل یاد گرفتید، می‌توانید با استفاده از فریمورک‌های آن، کدهای خود را در پروژه‌هایتان با راحتی هرچه بیشتر بزنید. گفتنی است که این زبان دارای فریمورک‌های متعددی است که محبوب‌ترین آن‌ها عبارت‌اند از:"
        }
        eightthTitle={"1. React"}
        seventhBody={
          "این فریمورک توسط شرکت فیس‌بوک ایجاد شد، به‌سرعت محبوبیت پیدا کرد و در توسعه و راه‌اندازی رابط‌کاربری پویای صفحات‌وب با ورودی بالا استفاده می‌شود؛ به همین دلیل، ادغام آن با برنامه‌های مختلف ساده‌تر است. احتمالاً برایتان جالب خواهد بود اگر بدانید که شاخه‌ی فرانت‌اند اپلیکیشن اینستاگرام، با فریمورک React برنامه نویسی شده است."
        }
        nineThTitle={"برنامه نویسی وب بک اند Back-End چیست؟"}
        eighthBody={
          "همان‌طور که گفتیم، برنامه نویسانِ بک‌اند در ساخت لایه‌ی زیرین وب‌سایت نقش دارند؛ حال بیایید کمی این موضوع را باز کنیم. لایه‌ی زیرین یا پنهان یک وب‌سایت شامل: تمامیِ پردازش‌ها، محاسبات و ذخیره‌ی اطلاعات است و از دید کاربران پنهان می‌باشد. به‌عنوان مثال، وقتی فرم عضویت در وب‌سایتی را پر می‌کنید و روی دکمه‌ی «ثبت‌نام/عضویت» کلیک می‌کنید، اطلاعات شما توسط کدهایی که در بخش Back-End نوشته شده است، در سرور، پردازش و ذخیره می‌شوند؛ سپس سرورِ آن وب‌سایت، ایمیلی برای شما جهت فعال‌سازی اکانت‌تان ارسال می‌کند. تمامی این عملیات‌ها در لایه‌ی زیرین و دور از چشم کاربر صورت می‌گیرد و نحوه‌ی انجام این کارها توسط برنامه نویسانِ Back-End وب کد نویسی و تعیین می‌شود (لطفاً در نظر داشته باشید اینکه فرم چه شکلی باشد، به بخش Front-End و لایه‌ی ظاهری مربوط است و بخش پردازشی آن مربوط به بخش Back-End می‌شود)."
        }
        tenthTitle={"مسیر یادگیری برنامه نویسی وب در شاخه بک اند Back-End"}
        ninethBody={
          "کسب اطلاعات اولیه از فرانت‌اند: باید بدانید فرانت‌اند و بک‌اند چه تفاوتی دارند و کار هر کدام چیست؟   کسب دانش عمومی در مورد سیستم‌های عامل: نحوه‌ی پردازش و ذخیره‌ی اطلاعات در آن‌ها.    یادگیری یک زبان برنامه نویسی وب بک‌اند: این مورد در ادامه به‌صورت جداگانه توضیح داده شده است.   آموزش در مورد سیستم‌های کنترل نسخه (Version Control Systems): به توسعه‌دهندگان این امکان را می‌دهد تا تغییرات ایجادشده در کدهای خود را کنترل کنند و در صورت بروز مشکل، بتوانند کد را برگشت زده و یا اصلاح کنند.   کسب اطلاعات در مورد انواع پایگاه‌های داده‌ی رابطه‌ای: این نوع از پایگاه‌های داده، داده‌ها را در یک سری از جداول ذخیره می‌کنند و دسترسی به آن‌ها را آسان‌تر می‌کنند. انواع پایگاه داده رابطه‌ای عبارت‌اند از: MySQL, Oracle, MS SQL, PostgreSQL   کسب اطلاعات در مورد پایگاه داده‌های غیر رابطه‌ای: این نوع از پایگاه داده‌ها، داده‌ها را در قالب اشیاء درون خود ذخیره می‌کنند. انواع پایگاه داده غیر رابطه‌ای عبارت‌اند از: MongoDB، RethinkDB، CouchDB و…   آموزش مدیریت پایگاه‌های داده: نحوه‌ی ذخیره و حذف داده‌ها، ویرایش داده‌ها، انتقال داده‌ها و… .   یادگیری نحوه کار با API ها      کسب دانش امنیت وب"
        }
        eleventhTitle={
          "زبان ها و فریمورک های مورد نیاز برای یادگیری بک اند Back-End"
        }
        tenthBody={"PHP  ASP     Python  Java  JavaScript Ruby  GO"}
        date={"۱۴۰۲/۱۱/۲۶"}
        author={"عرفان رضایی"}
      />
    </>
  );
}

export default page;
